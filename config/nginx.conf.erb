# Disable "daemon" mode, which causes nginx to run in the foreground
daemon off;

# Define the number of worker processes (Heroku dynos have at least 4 cores)
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
    # Explicitly force nginx to use the "epoll" connection processing method
    # (see http://nginx.org/en/docs/events.html)
	use epoll;

	accept_mutex on;

	# Set the maximum number of simultaneous connections that can be opened by a worker process
	worker_connections 2048;
}

http {
    # Use the `X-Forwarded-For` to replace the client address (`$remote_addr`).
	real_ip_header X-Forwarded-For;
	# Ignore "trusted addresses" (see `set_real_ip_from` below) when determining the real user IP
	real_ip_recursive on;

	set_real_ip_from 10.0.0.0/8;
	set_real_ip_from 127.0.0.0/24;

	# CloudFront IP addresses from http://d7uri8nf7uskq.cloudfront.net/tools/list-cloudfront-ips
	# Last updated: 2022-03-26
	set_real_ip_from 3.10.17.128/25;
	set_real_ip_from 3.11.53.0/24;
	set_real_ip_from 3.35.130.128/25;
	set_real_ip_from 3.101.158.0/23;
	set_real_ip_from 3.128.93.0/24;
	set_real_ip_from 3.134.215.0/24;
	set_real_ip_from 3.231.2.0/25;
	set_real_ip_from 3.234.232.224/27;
	set_real_ip_from 3.236.48.0/23;
	set_real_ip_from 3.236.169.192/26;
	set_real_ip_from 13.32.0.0/15;
	set_real_ip_from 13.35.0.0/16;
	set_real_ip_from 13.48.32.0/24;
	set_real_ip_from 13.54.63.128/26;
	set_real_ip_from 13.59.250.0/26;
	set_real_ip_from 13.113.196.64/26;
	set_real_ip_from 13.113.203.0/24;
	set_real_ip_from 13.124.199.0/24;
	set_real_ip_from 13.210.67.128/26;
	set_real_ip_from 13.224.0.0/14;
	set_real_ip_from 13.228.69.0/24;
	set_real_ip_from 13.233.177.192/26;
	set_real_ip_from 13.249.0.0/16;
	set_real_ip_from 15.158.0.0/16;
	set_real_ip_from 15.188.184.0/24;
	set_real_ip_from 15.207.13.128/25;
	set_real_ip_from 15.207.213.128/25;
	set_real_ip_from 18.64.0.0/14;
	set_real_ip_from 18.154.0.0/15;
	set_real_ip_from 18.160.0.0/15;
	set_real_ip_from 18.164.0.0/15;
	set_real_ip_from 18.172.0.0/15;
	set_real_ip_from 18.192.142.0/23;
	set_real_ip_from 18.200.212.0/23;
	set_real_ip_from 18.216.170.128/25;
	set_real_ip_from 18.229.220.192/26;
	set_real_ip_from 18.238.0.0/15;
	set_real_ip_from 18.244.0.0/15;
	set_real_ip_from 34.195.252.0/24;
	set_real_ip_from 34.216.51.0/25;
	set_real_ip_from 34.223.12.224/27;
	set_real_ip_from 34.223.80.192/26;
	set_real_ip_from 34.226.14.0/24;
	set_real_ip_from 35.158.136.0/24;
	set_real_ip_from 35.162.63.192/26;
	set_real_ip_from 35.167.191.128/26;
	set_real_ip_from 36.103.232.0/25;
	set_real_ip_from 36.103.232.128/26;
	set_real_ip_from 44.227.178.0/24;
	set_real_ip_from 44.234.90.252/30;
	set_real_ip_from 44.234.108.128/25;
	set_real_ip_from 52.15.127.128/26;
	set_real_ip_from 52.46.0.0/18;
	set_real_ip_from 52.47.139.0/24;
	set_real_ip_from 52.52.191.128/26;
	set_real_ip_from 52.56.127.0/25;
	set_real_ip_from 52.57.254.0/24;
	set_real_ip_from 52.66.194.128/26;
	set_real_ip_from 52.78.247.128/26;
	set_real_ip_from 52.82.128.0/19;
	set_real_ip_from 52.84.0.0/15;
	set_real_ip_from 52.124.128.0/17;
	set_real_ip_from 52.199.127.192/26;
	set_real_ip_from 52.212.248.0/26;
	set_real_ip_from 52.220.191.0/26;
	set_real_ip_from 52.222.128.0/17;
	set_real_ip_from 54.182.0.0/16;
	set_real_ip_from 54.192.0.0/16;
	set_real_ip_from 54.230.0.0/17;
	set_real_ip_from 54.230.128.0/18;
	set_real_ip_from 54.230.200.0/21;
	set_real_ip_from 54.230.208.0/20;
	set_real_ip_from 54.230.224.0/19;
	set_real_ip_from 54.233.255.128/26;
	set_real_ip_from 54.239.128.0/18;
	set_real_ip_from 54.239.192.0/19;
	set_real_ip_from 54.240.128.0/18;
	set_real_ip_from 58.254.138.0/25;
	set_real_ip_from 58.254.138.128/26;
	set_real_ip_from 64.252.64.0/18;
	set_real_ip_from 64.252.128.0/18;
	set_real_ip_from 65.8.0.0/16;
	set_real_ip_from 65.9.0.0/17;
	set_real_ip_from 65.9.128.0/18;
	set_real_ip_from 70.132.0.0/18;
	set_real_ip_from 71.152.0.0/17;
	set_real_ip_from 99.79.169.0/24;
	set_real_ip_from 99.84.0.0/16;
	set_real_ip_from 99.86.0.0/16;
	set_real_ip_from 108.138.0.0/15;
	set_real_ip_from 108.156.0.0/14;
	set_real_ip_from 116.129.226.0/25;
	set_real_ip_from 116.129.226.128/26;
	set_real_ip_from 118.193.97.64/26;
	set_real_ip_from 118.193.97.128/25;
	set_real_ip_from 119.147.182.0/25;
	set_real_ip_from 119.147.182.128/26;
	set_real_ip_from 120.52.12.64/26;
	set_real_ip_from 120.52.22.96/27;
	set_real_ip_from 120.52.39.128/27;
	set_real_ip_from 120.52.153.192/26;
	set_real_ip_from 120.232.236.0/25;
	set_real_ip_from 120.232.236.128/26;
	set_real_ip_from 120.253.240.192/26;
	set_real_ip_from 120.253.241.160/27;
	set_real_ip_from 120.253.245.128/26;
	set_real_ip_from 120.253.245.192/27;
	set_real_ip_from 130.176.0.0/17;
	set_real_ip_from 130.176.128.0/18;
	set_real_ip_from 130.176.192.0/19;
	set_real_ip_from 130.176.224.0/20;
	set_real_ip_from 143.204.0.0/16;
	set_real_ip_from 144.220.0.0/16;
	set_real_ip_from 180.163.57.0/25;
	set_real_ip_from 180.163.57.128/26;
	set_real_ip_from 204.246.164.0/22;
	set_real_ip_from 204.246.168.0/22;
	set_real_ip_from 204.246.172.0/24;
	set_real_ip_from 204.246.173.0/24;
	set_real_ip_from 204.246.174.0/23;
	set_real_ip_from 204.246.176.0/20;
	set_real_ip_from 205.251.200.0/21;
	set_real_ip_from 205.251.208.0/20;
	set_real_ip_from 205.251.249.0/24;
	set_real_ip_from 205.251.250.0/23;
	set_real_ip_from 205.251.252.0/23;
	set_real_ip_from 205.251.254.0/24;
	set_real_ip_from 216.137.32.0/19;
	set_real_ip_from 223.71.11.0/27;
	set_real_ip_from 223.71.71.96/27;
	set_real_ip_from 223.71.71.128/25;

    # Enable gzip compression of responses
	gzip on;
	# Set the gzip compression level to 2 (range: 1-9, nginx default: 1)
	gzip_comp_level 2;
	# Enable gzip compression for all proxied requests
	gzip_proxied any;
	# Set the minimum length of a response that will be gzipped. The length is determined only from the “Content-Length” response header field.
	gzip_min_length 512;
	# Enable gzip for responses with the specified MIME types in addition to “text/html”. Responses with the “text/html” type are always compressed.
	gzip_types text/plain text/css application/json application/javascript application/x-javascript text/javascript text/xml application/xml application/rss+xml application/atom+xml application/rdf+xml image/svg+xml;

    # Disable emitting nginx version on error pages and in the “Server” response header field
	server_tokens off;

	# Disable access logs, since our axum application logs them too
	access_log /dev/null;
	# Write error logs to the default `heroku-buildpack-nginx` location
	error_log logs/nginx/error.log;

    # Define common file name extension to MIME type mappings
	include mime.types;
    # Define the default MIME type of a response if none of the mappings from above match
	default_type application/octet-stream;

	# Enable the use of the `sendfile` Linux API for sending files over the network
	sendfile on;

    # Set the maximum allowed size of the client request body to 50 MB
	client_max_body_size 50m;

	upstream app_server {
		server localhost:8888 fail_timeout=0;
	}

	server {
		listen <%= ENV["PORT"] %>;

		# Set a catch-all server name (see http://nginx.org/en/docs/http/server_names.html)
		server_name _;

        # Set a timeout during which a keep-alive client connection will stay open on the server side
		keepalive_timeout 5;

        # Use the passed-in `Host` header for proxied requests instead of changing it to the `proxy_pass` value
		proxy_set_header Host $http_host;

		# Add a `X-Real-Ip` header to proxied requests containing the client address
		# (after being changed by the `realip` module)
		proxy_set_header X-Real-Ip $remote_addr;

		# Disable `Location` and `Refresh` header rewriting for proxied responses
		proxy_redirect off;

        # If the `X-Forwarded-Proto` request header does not contain `https` …
		if ($http_x_forwarded_proto != 'https') {
		    # … return a "301 Moved Permanently" response to the HTTPS equivalent URL
			rewrite ^ https://$host$request_uri? permanent;
		}

        location / {
            # Proxy all requests to our axum app server
            proxy_pass http://app_server;
        }
	}
}
